x360 FUSE filesystem driver
Copyright (C) 2009 by Isaac Tepper
Licensed under the terms of the GNU GPL v3


CONTENTS
========

1. Introduction
2. Building
3. Usage
4. Features



INTRODUCTION
============

x360 aims to provide linux users with what Windows users have had for a long
time: full read/write support to Xbox 360 Hard Drives. Unlike current Windows
solutions, which are implemented as individual programs, x360 is implemented as
a filesystem for the convenience to be able to browse/access the hard drive
with whatever applications you choose. FUSE was picked simply for the ease of
use.



BUILDING
========

To compile the driver, simply run 'make'. This project's makefile uses
pkg-config to determine the appropriate compiler flags for your system. If you
do not have pkg-config on your system, run:

    CFLAGS="-D_FILE_OFFSET_BITS=64 -I/usr/include/fuse" \
    LIBS="-pthread -lfuse -lrt -ldl" make

with -I pointing to the correct include directory for your system.



USAGE
=====

Usage: x360 [options] /dev/sdx /mount/point

Options are:
    -h          help (message similar to this)
    -o options  comma-separated list of options (mount syntax)

The options that are currently supported:
    debug       debug mode
    gid=        set owner gid (default is user who is executing the program)
    off=        set file/drive offset
    uid=        set owner uid (default is user who is executing the program)

Example: x360 -o debug,uid=1000 /dev/sdb ~/x360
(turns on debug mode, and all files are owned by uid 1000)

x360 can be used to mount both block devices and regular files. When x360
mounts a block device, it sets the partition offset to 0x130EB0000, which is
standard for all Xbox 360 hard drives. However, when x360 mounts a regular file
(ie filesystem image), the offset is set to 0, in effect assuming that the
image is of the third partition only.

The 'off' option can be used to set an arbitrary offset for both block devices
and regular files. This could be used to correct the offset for an image of an
entire hard drive, for example, or if you want to try your hand at reading from
a memory unit.



FEATURES
========

+--------------------+----------------+---------------------------------------+
|Feature:            |Implementation: |Comments:                              |
+--------------------+----------------+---------------------------------------+
|Directory Listing:  |90%             |multi-cluster directories can be listed|
|                    |                |but not modified (untested)            |
+--------------------+----------------+---------------------------------------+
|File Stating:       |60%             |name, file vs directory, and file size |
|                    |                |are supported; time is weirdly         |
|                    |                |supported                              |
+--------------------+----------------+---------------------------------------+
|File Creation:      |100%            |Creates an entry in the directory table|
|                    |                |and allocates a cluster for use        |
+--------------------+----------------+---------------------------------------+
|File Reading:       |100%            |full file read support with            |
|                    |                |error-checking                         |
+--------------------+----------------+---------------------------------------+
|File Writing:       |100%            |full file write support with           |
|                    |                |error-checking                         |
+--------------------+----------------+---------------------------------------+
|File Renaming:      |50%             |Renaming across directories (moving) is|
|                    |                |not supported.                         |
+--------------------+----------------+---------------------------------------+
|File Truncation:    |100%            |Truncating allocates/frees clusters    |
|                    |                |appropriately                          |
+--------------------+----------------+---------------------------------------+
|File Deletion:      |100%            |Marks directory entry as 'deleted' and |
|                    |                |frees clusters                         |
+--------------------+----------------+---------------------------------------+
|Directory Creation: |100%            |Makes 100% genuine directories :)      |
+--------------------+----------------+---------------------------------------+
|Directory Deletion: |50%             |Believe it or not, you have to actually|
|                    |                |remove all the files from a directory  |
|                    |                |before deleting it (I thought that file|
|                    |                |managers did that automatically, but I |
|                    |                |guess not)                             |
+--------------------+----------------+---------------------------------------+
|Partitions:         |5%              |partition 3 support only; automatic    |
|                    |                |size detection                         |
+--------------------+----------------+---------------------------------------+
|Multi-User Support: |60%             |mounted files have user's uid/gid as   |
|                    |                |owner uid/gid; user can set arbitrary  |
|                    |                |uid/gid for owner                      |
+--------------------+----------------+---------------------------------------+

I typed that all by hand :)

Expect for these incomplete features, and more brand new features, to be
implemented in future releases.
